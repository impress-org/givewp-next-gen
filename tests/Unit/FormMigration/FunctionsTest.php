<?php

namespace Give\Tests\Unit\FormMigration;

use Give\Tests\TestCase;
use Give\Tests\TestTraits\RefreshDatabase;

class FunctionsTest extends TestCase
{
    use RefreshDatabase;

    protected $migratedFormIdLookup = [
        1 => 101,
        2 => 202,
        3 => 303,
    ];

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        global $wpdb;
        foreach($this->migratedFormIdLookup as $oldId => $newId) {
            $wpdb->insert($wpdb->prefix . 'give_formmeta', [
                'form_id' => $newId,
                'meta_key' => 'migratedFormId',
                'meta_value' => $oldId,
            ]);
        }
    }

    public function testSingleValueUpdate()
    {
        $formId = 2;

        givewp_migrated_form_id($formId);

        $this->assertEquals($formId, $this->migratedFormIdLookup[2]);
    }

    public function testMultipleValueUpdate()
    {
        $formId = 2;
        $atts['id'] = 2;

        givewp_migrated_form_id($formId, $atts['id']);

        $this->assertEquals($formId, $this->migratedFormIdLookup[2]);
        $this->assertEquals($atts['id'], $this->migratedFormIdLookup[2]);
    }

    public function testVariadicValueUpdate()
    {
        //
    }

    public function testArrayValueUpdate()
    {
        $ids = [
            1 => 1,
            2 => 2,
        ];

        givewp_migrated_form_id($ids);

        $this->assertEquals($ids[1], $this->migratedFormIdLookup[1]);
        $this->assertEquals($ids[2], $this->migratedFormIdLookup[2]);
    }
}
